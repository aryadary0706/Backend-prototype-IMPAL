// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  email       String          @unique
  name        String
  password    String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  sessions    Session[]
  identifications Identification[]
  historyManagers HistoryManager[]
}

model Session {
  id         String    @id @default(uuid())
  userId     String
  token      String    @unique
  expiresAt  DateTime
  createdAt  DateTime  @default(now())

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Identification {
  id                 String    @id @default(uuid())
  userId             String
  imagePath          String
  plantName          String
  diseaseName        String
  diseaseDescription String
  confidenceScore    Float
  createdAt          DateTime  @default(now())

  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  historyManager    HistoryManager?
}

model HistoryManager {
  id         String    @id @default(uuid())
  userId     String
  action     String
  timestamp  DateTime  @default(now())
  resultId   String   @unique

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade) 
  identifications Identification @relation(fields: [resultId], references: [id], onDelete: Cascade)
}